/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mesasexamen;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author cafet
 */
public class jtable extends javax.swing.JFrame {

    Conexion con1= new Conexion();
    Connection conet;
    DefaultTableModel modelo;
    DefaultTableModel modelo2;
    Statement st;
    ResultSet rs;
    int dni;
    String orden = "";
    String aod = "asc ";
    String especif = "";
    String itemcurso = "";
    boolean especifcurso = false;
    boolean cambio= false;
    
    public jtable() {
        initComponents();
        setLocationRelativeTo(null);
        
        Seleccionar();
        consultar();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox1 = new javax.swing.JComboBox<>();
        datos = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        nombretxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        dnitxt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cursotxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        agregar = new javax.swing.JButton();
        modificar = new javax.swing.JButton();
        eliminar = new javax.swing.JButton();
        nuevo = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        debetxt = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        buscar = new javax.swing.JButton();
        buscartxt = new javax.swing.JTextField();
        Combo = new javax.swing.JComboBox<>();
        AoD = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        especificador = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Tabla2 = new javax.swing.JTable();
        combocursos = new javax.swing.JComboBox<>();
        administrarcursos = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        datos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setText("nombre");

        nombretxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombretxtActionPerformed(evt);
            }
        });

        jLabel3.setText("dni");

        jLabel7.setText("curso");

        jLabel5.setText("debe");

        agregar.setText("Agregar");
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });

        modificar.setText("Modificar");
        modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarActionPerformed(evt);
            }
        });

        eliminar.setText("Eliminar");
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });

        nuevo.setText("Limpiar");
        nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoActionPerformed(evt);
            }
        });

        debetxt.setColumns(20);
        debetxt.setRows(5);
        jScrollPane4.setViewportView(debetxt);

        javax.swing.GroupLayout datosLayout = new javax.swing.GroupLayout(datos);
        datos.setLayout(datosLayout);
        datosLayout.setHorizontalGroup(
            datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(datosLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(60, 60, 60)
                        .addComponent(nombretxt))
                    .addGroup(datosLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(85, 85, 85)
                        .addComponent(dnitxt))
                    .addGroup(datosLayout.createSequentialGroup()
                        .addGroup(datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel5)
                            .addComponent(agregar))
                        .addGap(30, 30, 30)
                        .addGroup(datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cursotxt)
                            .addGroup(datosLayout.createSequentialGroup()
                                .addComponent(modificar)
                                .addGap(18, 18, 18)
                                .addComponent(eliminar)
                                .addGap(18, 18, 18)
                                .addComponent(nuevo)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane4))))
                .addContainerGap())
        );
        datosLayout.setVerticalGroup(
            datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nombretxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(dnitxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cursotxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(modificar)
                    .addComponent(eliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nuevo))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        buscar.setText("Busqueda precisa");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });

        buscartxt.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                buscartxtComponentAdded(evt);
            }
        });
        buscartxt.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                buscartxtCaretUpdate(evt);
            }
        });
        buscartxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscartxtActionPerformed(evt);
            }
        });

        Combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---", "Nombre", "DNI", "Curso", "Debe" }));
        Combo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Combo.setName(""); // NOI18N
        Combo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboItemStateChanged(evt);
            }
        });

        AoD.setText("Ascendente");
        AoD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AoDActionPerformed(evt);
            }
        });

        jLabel1.setText("Especificamente:");

        especificador.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---", "Nombre", "DNI", "Curso", "Debe" }));
        especificador.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                especificadorItemStateChanged(evt);
            }
        });

        jLabel6.setText("Ordenar por:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buscartxt, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(especificador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AoD)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 344, Short.MAX_VALUE)
                .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buscar)
                    .addComponent(buscartxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AoD)
                    .addComponent(jLabel1)
                    .addComponent(especificador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "nombre", "dni", "curso", "debe"
            }
        ));
        Tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(Tabla);
        if (Tabla.getColumnModel().getColumnCount() > 0) {
            Tabla.getColumnModel().getColumn(0).setPreferredWidth(250);
            Tabla.getColumnModel().getColumn(0).setMaxWidth(250);
            Tabla.getColumnModel().getColumn(1).setPreferredWidth(75);
            Tabla.getColumnModel().getColumn(1).setMaxWidth(75);
            Tabla.getColumnModel().getColumn(2).setPreferredWidth(50);
            Tabla.getColumnModel().getColumn(2).setMaxWidth(70);
            Tabla.getColumnModel().getColumn(3).setPreferredWidth(500);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        Tabla2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "materia", "curso", "profesores", "horario"
            }
        ));
        jScrollPane3.setViewportView(Tabla2);
        if (Tabla2.getColumnModel().getColumnCount() > 0) {
            Tabla2.getColumnModel().getColumn(1).setMaxWidth(50);
        }

        combocursos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---" }));
        combocursos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combocursosItemStateChanged(evt);
            }
        });

        administrarcursos.setText("Administrar cursos");
        administrarcursos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                administrarcursosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 754, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(administrarcursos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(combocursos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combocursos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(administrarcursos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(datos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(datos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaMouseClicked
            int fila = Tabla.getSelectedRow();
            if(fila==-1){
                JOptionPane.showMessageDialog(null, "No se selecciono fila");
            }else{
                String nombre = Tabla.getValueAt(fila, 0) .toString();
                dni = Integer.parseInt((String)Tabla.getValueAt(fila, 1) .toString());
                String curso = Tabla.getValueAt(fila, 2) .toString();
                String debe = Tabla.getValueAt(fila, 3) .toString();
                nombretxt.setText(""+nombre);
                dnitxt.setText(""+dni);
                cursotxt.setText(""+curso);
                debetxt.setText(""+debe);
                
            }
            combocursos.setSelectedIndex(0);
            tablacurso(Tabla.getSelectedRow());
            
    }//GEN-LAST:event_TablaMouseClicked

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void buscartxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscartxtActionPerformed
        
    }//GEN-LAST:event_buscartxtActionPerformed

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        buscarestricto();
    }//GEN-LAST:event_buscarActionPerformed

    private void buscartxtComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_buscartxtComponentAdded
        
    }//GEN-LAST:event_buscartxtComponentAdded

    private void buscartxtCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_buscartxtCaretUpdate
        if(especif.equals("")){
            buscar();
        }else{
            buscarestricto();    
        }    
    }//GEN-LAST:event_buscartxtCaretUpdate

    private void ComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboItemStateChanged
        Seleccionar();
        limpiasegura();
        buscar();   
    }//GEN-LAST:event_ComboItemStateChanged

    private void AoDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AoDActionPerformed
        Cambio();
        Seleccionar();
        buscar();    
    }//GEN-LAST:event_AoDActionPerformed

    private void especificadorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_especificadorItemStateChanged
        Especificar();
        limpiasegura();
        if(especif.equals("")){
            buscar();
        }else{
            buscarestricto();    
        }
    }//GEN-LAST:event_especificadorItemStateChanged

    private void nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoActionPerformed
        Nuevo();
    }//GEN-LAST:event_nuevoActionPerformed

    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
        Eliminar();
        Nuevo();
        buscar();
    }//GEN-LAST:event_eliminarActionPerformed

    private void modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarActionPerformed
        Modificar();
        Nuevo();
        buscar();
    }//GEN-LAST:event_modificarActionPerformed

    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed
        Agregar();
        Nuevo();
        buscar();
    }//GEN-LAST:event_agregarActionPerformed

    private void nombretxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombretxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombretxtActionPerformed

    private void combocursosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combocursosItemStateChanged
        if (!combocursos.getSelectedItem().equals("---")||cambio){
            tablacurso(Tabla.getSelectedRow());
            cambio= false;
        }else{
            cambio= true;
        }
    }//GEN-LAST:event_combocursosItemStateChanged

    private void administrarcursosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_administrarcursosActionPerformed
        Cursos administrar = new Cursos();
        administrar.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_administrarcursosActionPerformed
    
    public static boolean esNumero(String str) {
        try {
            Double.parseDouble(str);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }
    
    void tablacurso(int selectedrow){
           
        String debes = (String) Tabla.getValueAt(selectedrow, 3);
        String[] debesmaterias = debes.split(", ");
        debes = Arrays.toString(debesmaterias);
        debesmaterias = debes.split(" ");
        
        
        for (int i = 0; i < debesmaterias.length; i++) {
            debesmaterias[i] = debesmaterias[i].replaceAll("\\[|\\]", "");
            debesmaterias[i] = debesmaterias[i].replaceAll(",", "");
        }
        
        ArrayList<String> debesmateriassolo = new ArrayList<>();
        ArrayList<String> debesmateriascurso = new ArrayList<>();
        boolean numero = false;
        for (int i = 0; i < debesmaterias.length; i++) {
            if (esNumero(debesmaterias[i])) {
                
                debesmateriascurso.add(debesmaterias[i] + " ");
                numero=true;
            } else if (numero) {
                debesmateriascurso.set(debesmateriascurso.size()-1, debesmaterias[i-1]+" "+ debesmaterias[i]);
                numero=false;
                
            } else {
                debesmateriassolo.add(debesmaterias[i]);
            }
        }
        limpiasegura2();
        
        if (!combocursos.getSelectedItem().equals("---")){
            itemcurso = "' and materia like '"+(String) combocursos.getSelectedItem()+"'";
            especifcurso = true;
            
        }else{
            while (combocursos.getItemCount()!=1){
                    combocursos.removeItemAt(1);

            }

            for(int x=0; x <= (debesmateriassolo.size()-1);x++){
                combocursos.addItem(debesmateriassolo.get(x));

            }
        
            especifcurso= false;
        }
        String sql= "select * from materias where " ;
        
        for(int i=0; i <= (debesmateriassolo.size()-1);i++){
            if(i == debesmateriassolo.size()-1 && especifcurso){
                sql = sql + "curso like '"+ debesmateriascurso.get(i)+ itemcurso;
                especifcurso = false;
            }else if(especifcurso){
                sql = sql + "curso like '"+ debesmateriascurso.get(i)+ itemcurso+ " or ";
            }else if(i == debesmateriassolo.size()-1){
                sql = sql + "curso like '"+ debesmateriascurso.get(i)+"' and materia like '"+debesmateriassolo.get(i)+"'";
            }else{
                sql = sql + "curso like '"+ debesmateriascurso.get(i)+"' and materia like '"+debesmateriassolo.get(i)+"' or ";
            }
            
        }
        try{
            conet = con1.getConnection();
            st = conet.createStatement();
            rs = st.executeQuery(sql);
            Object[] muestra = new Object [4];
            modelo2= (DefaultTableModel) Tabla2.getModel();
            while (rs.next()){
                muestra [0] = rs.getString("materia");
                muestra [1] = rs.getString("curso");
                muestra [2] = rs.getString("profesores");
                muestra [3] = rs.getString("horario");
                
                modelo2.addRow(muestra);
                
            }
            Tabla2.setModel(modelo2);
        } catch (Exception e){
            
        }
    }
    
    void Especificar(){
        if(especificador.getSelectedItem().equals("---")){
            especif= "";
        }else{
            especif = (String) especificador.getSelectedItem();
        }
    }
    
    void Seleccionar(){
        if(Combo.getSelectedItem().equals("---")){
            orden= " ";
        }else{
            orden = "order by "+(String) Combo.getSelectedItem()+" "+aod;
        }
    }
    
    void Cambio(){
       aod = AoD.getText();
        
        if ("Ascendente".equals(aod)){
            aod = "desc ";
            AoD.setText("Descendente");   
        }else{
            aod = "asc ";
            AoD.setText("Ascendente");    
        } 
    }
    
    void Modificar(){
        String nombre = nombretxt.getText();
        String dni = dnitxt.getText();
        String curso = cursotxt.getText();
        String debe = debetxt.getText();
        try {
            if (nombre.equals("")||dni.equals("")||curso.equals("")||debe.equals("")){
                JOptionPane.showMessageDialog(null, "Falta algun dato");
                limpiarTabla();
            } else{
                
                String sql = "Update alumnos set nombre='"+nombre+"', dni='"+dni+"', curso='"+curso+"', debe='"+debe+"' where dni="+dni;
                conet = con1.getConnection();
                st = conet.createStatement();
                st.executeUpdate(sql);
                JOptionPane.showMessageDialog(null, "Alumno modificado");
                limpiarTabla();
            }
        }catch (Exception e){
        }
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jtable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jtable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jtable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jtable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jtable().setVisible(true);
            }
        });
    }
    
    void consultar(){
        String sql= "select * from alumnos "+orden ;
        
        try{
            conet = con1.getConnection();
            st = conet.createStatement();
            rs = st.executeQuery(sql);
            Object[] muestra = new Object [4];
            modelo= (DefaultTableModel) Tabla.getModel();
            while (rs.next()){
                muestra [0] = rs.getString("nombre");
                muestra [1] = rs.getInt("dni");
                muestra [2] = rs.getString("curso");
                muestra [3] = rs.getString("debe");
                
                modelo.addRow(muestra);
                
            }
            Tabla.setModel(modelo);
        } catch (Exception e){
            
        }
    }
    
    void buscar(){
        String busqueda = buscartxt.getText();
        String sql= "SELECT * FROM `alumnos` WHERE nombre LIKE '%"+busqueda+"%' or dni LIKE '%"+busqueda+"%' or curso LIKE '%"+busqueda+"%' or debe LIKE '%"+busqueda+"%' "+orden;
        
        if (busqueda.equals("")){
            limpiasegura();
            consultar();
        }else{
            limpiasegura();
            try{
                conet = con1.getConnection();
                st = conet.createStatement();
                rs = st.executeQuery(sql);
                Object[] muestra = new Object [4];
                modelo= (DefaultTableModel) Tabla.getModel();
                while (rs.next()){
                    muestra [0] = rs.getString("nombre");
                    muestra [1] = rs.getInt("dni");
                    muestra [2] = rs.getString("curso");
                    muestra [3] = rs.getString("debe");
                
                    modelo.addRow(muestra);
                
                    }
                Tabla.setModel(modelo);
                
        
            } catch (Exception e){
            }    
        }
    }
    
    void buscarestricto(){
        String busqueda = buscartxt.getText();
        String sql= "SELECT * FROM `alumnos` WHERE "+especif+" LIKE '"+busqueda+"' "+orden;
        if(especif.equals(" ")){
            sql= "SELECT * FROM `alumnos` WHERE nombre LIKE '"+busqueda+"' or dni LIKE '"+busqueda+"' or curso LIKE '"+busqueda+"' or debe LIKE '"+busqueda+"' ORDER BY `nombre`";
        }
        if (busqueda.equals("")){
            limpiasegura();
            consultar();
        }else{
            limpiasegura();
            try{
                conet = con1.getConnection();
                st = conet.createStatement();
                rs = st.executeQuery(sql);
                Object[] muestra = new Object [4];
                modelo= (DefaultTableModel) Tabla.getModel();
                while (rs.next()){
                    muestra [0] = rs.getString("nombre");
                    muestra [1] = rs.getInt("dni");
                    muestra [2] = rs.getString("curso");
                    muestra [3] = rs.getString("debe");
                
                    modelo.addRow(muestra);
                
                    }
                Tabla.setModel(modelo);
                
        
            } catch (Exception e){
            }    
        }
    }
   
    void Agregar(){
        String nombre = nombretxt.getText();
        String dni = dnitxt.getText();
        String curso = cursotxt.getText();
        String debe = debetxt.getText();
        
        try {
            if (nombre.equals("")||dni.equals("")||curso.equals("")||debe.equals("")){
                JOptionPane.showMessageDialog(null, "Falta algun dato");
                limpiarTabla();
            } else{
                
                String sql = "insert into alumnos(nombre, dni, curso, debe) values ('"+nombre+"','"+dni+"','"+curso+"','"+debe+"')";
                conet = con1.getConnection();
                st = conet.createStatement();
                st.executeUpdate(sql);
                JOptionPane.showMessageDialog(null, "Alumno colocado");
                limpiarTabla();
            }
        }catch (Exception e){
            
        }
    }
    
    void limpiarTabla(){
        for (int i = 0; i <=Tabla.getRowCount(); i++){
            modelo.removeRow(i);
            i = i-1;
        }
    }
    
    void limpiarTabla2(){
        for (int i = 0; i <=Tabla2.getRowCount(); i++){
            modelo2.removeRow(i);
            i = i-1;
        }
    }
    
    void limpiasegura(){
        try {
            limpiarTabla();
        }catch (Exception e){
        }
    }
    
    void limpiasegura2(){
        try {
            limpiarTabla2();
        }catch (Exception e){
        }
    }
   
    void Eliminar(){
        int fila=Tabla.getSelectedRow();
        try{
            if(fila<0){
                JOptionPane.showMessageDialog(null, "Muestra no seleccionada");
                limpiarTabla();
            }else{
                String sql= "delete from alumnos where dni="+dni;
                conet = con1.getConnection();
                st = conet.createStatement();
                st.executeUpdate(sql);
                JOptionPane.showMessageDialog(null, "Muestra eliminada");
                limpiarTabla();
            }
        }catch(Exception e){
        }
    }
    
    void Nuevo(){
        nombretxt.requestFocus();
        nombretxt.setText("");
        dnitxt.setText("");
        cursotxt.setText("");
        debetxt.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AoD;
    private javax.swing.JComboBox<String> Combo;
    private javax.swing.JTable Tabla;
    private javax.swing.JTable Tabla2;
    private javax.swing.JButton administrarcursos;
    private javax.swing.JButton agregar;
    private javax.swing.JButton buscar;
    private javax.swing.JTextField buscartxt;
    private javax.swing.JComboBox<String> combocursos;
    private javax.swing.JTextField cursotxt;
    private javax.swing.JPanel datos;
    private javax.swing.JTextArea debetxt;
    private javax.swing.JTextField dnitxt;
    private javax.swing.JButton eliminar;
    private javax.swing.JComboBox<String> especificador;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton modificar;
    private javax.swing.JTextField nombretxt;
    private javax.swing.JButton nuevo;
    // End of variables declaration//GEN-END:variables
}
